/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.manager;

import bus.BillBUS;
import connectDB.ConnectDB;
import entity.Bill;
import gui.custom.CustomScrollBarUI;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import util.GenerateExcel;

/**
 *
 * @author Hoang
 */
public class TAB_HoaDon extends javax.swing.JPanel {

    private DefaultTableModel modelTable;
    private BillBUS billBUS;
    private DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");
    private DecimalFormat df = new DecimalFormat("#,### đ");

    /**
     * Creates new form TAB_HoaDon
     */
    public TAB_HoaDon() {
        billBUS = new BillBUS();
        initComponents();
//        jDateFrom.setDate(Date.valueOf(LocalDate.of(LocalDate.now().getYear(), LocalDate.now().getMonthValue(), 1)));
//        jDateTo.setDate(Date.valueOf(LocalDate.now()));
        java.util.Date date1 = jDateFrom.getDate();
        LocalDate start = date1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        java.util.Date date2 = jDateTo.getDate();
        LocalDate end = date2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        loadData(start, end);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnRight = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableHoaDon = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        ketQua = new javax.swing.JLabel();
        jDateFrom = new com.toedter.calendar.JDateChooser();
        jDateTo = new com.toedter.calendar.JDateChooser();
        btnXuatExcel = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        pnRight.setBackground(new java.awt.Color(255, 255, 255));
        pnRight.setMinimumSize(new java.awt.Dimension(1083, 765));
        pnRight.setName(""); // NOI18N
        pnRight.setPreferredSize(new java.awt.Dimension(1083, 765));
        pnRight.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        String[] header = {"Mã hóa đơn","Ngày lập", "Tổng tiền", "Khách hàng", "Nhân viên"};
        modelTable = new DefaultTableModel(header,0){
            boolean[] canEdit = new boolean [] {
                false,false, false,false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        tableHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        tableHoaDon.setModel(modelTable);
        tableHoaDon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableHoaDon.setGridColor(new java.awt.Color(255, 255, 255));
        tableHoaDon.setRowHeight(50);
        tableHoaDon.setSelectionBackground(new java.awt.Color(54,107,177));
        tableHoaDon.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableHoaDon.getTableHeader().setReorderingAllowed(false);
        tableHoaDon.getTableHeader().setPreferredSize(new Dimension(tableHoaDon.getColumnModel().getTotalColumnWidth(), 50));
        tableHoaDon.getTableHeader().setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));
        tableHoaDon.getTableHeader().setDefaultRenderer(new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                label.addMouseListener(null);

                return label;
            }
        });
        tableHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHoaDonMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableHoaDon);
        tableHoaDon.getTableHeader().setResizingAllowed(false);
        for (int i = 0; i < tableHoaDon.getColumnCount(); i++) {
            tableHoaDon.getColumnModel().getColumn(i).setResizable(false);
        }

        pnRight.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 1540, 750));
        jScrollPane2.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        jScrollPane2.getHorizontalScrollBar().setUI(new CustomScrollBarUI());
        jScrollPane2.getViewport().setBackground(Color.WHITE);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel4.setText("Kết quả:");
        pnRight.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 840, -1, -1));

        ketQua.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        ketQua.setText("0");
        pnRight.add(ketQua, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 840, -1, -1));

        jDateFrom.setBackground(new java.awt.Color(255, 255, 255));
        jDateFrom.setDateFormatString("dd/MM/yyyy");
        jDateFrom.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jDateFrom.setDate(Date.valueOf(LocalDate.of(LocalDate.now().getYear(), LocalDate.now().getMonthValue(), 1)));
        jDateFrom.setPreferredSize(new java.awt.Dimension(100, 22));
        jDateFrom.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateFromPropertyChange(evt);
            }
        });
        pnRight.add(jDateFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 210, 40));

        jDateTo.setBackground(new java.awt.Color(255, 255, 255));
        jDateTo.setDateFormatString("dd/MM/yyyy");
        jDateTo.setDate(Date.valueOf(LocalDate.now()));
        jDateTo.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jDateTo.setPreferredSize(new java.awt.Dimension(100, 22));
        jDateTo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateToPropertyChange(evt);
            }
        });
        pnRight.add(jDateTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 210, 40));

        btnXuatExcel.setBackground(new java.awt.Color(11, 77, 163));
        btnXuatExcel.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnXuatExcel.setForeground(new java.awt.Color(255, 255, 255));
        btnXuatExcel.setText("Xuất File Excel");
        btnXuatExcel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXuatExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelActionPerformed(evt);
            }
        });
        pnRight.add(btnXuatExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 10, 180, 50));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel5.setText("-->");
        pnRight.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnRight, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1593, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnRight, javax.swing.GroupLayout.PREFERRED_SIZE, 904, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 71, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadData(LocalDate start, LocalDate end) {
        modelTable.setRowCount(0);
        Map<Bill, Double> bills = billBUS.getBillByDate(start, end);
        ketQua.setText(bills.size() + "");
        for (Map.Entry<Bill, Double> entry : bills.entrySet()) {
            Bill bill = entry.getKey();
            modelTable.addRow(new Object[]{bill.getBillId(), dtf.format(bill.getCreatedAt()), df.format(entry.getValue()),
                bill.getCustomer().getName(), bill.getStaff().getName()});
        }
    }


    private void tableHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHoaDonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableHoaDonMouseClicked

    private void jDateFromPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateFromPropertyChange
        // TODO add your handling code here:
        java.util.Date date1 = jDateFrom.getDate();
        java.util.Date date2 = jDateTo.getDate();
        if (date1 == null || date2 == null || evt.getOldValue() == null || evt.getOldValue().toString().startsWith("javax.swing.JPanel")
                || evt.getOldValue().toString().startsWith("D3DGraphicsConfig")) {
            return;
        }
        DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("EEE MMM dd HH:mm:ss zzz yyyy", Locale.ENGLISH);
        LocalDate dateOld = LocalDate.parse(evt.getOldValue().toString(), inputFormatter);
        LocalDate start = date1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate end = date2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        if (start.isAfter(end)) {
            JOptionPane.showMessageDialog(null, "Ngày bắt đầu phải trước ngày kết thúc", "Lỗi", JOptionPane.ERROR_MESSAGE);
            jDateFrom.setDate(Date.valueOf(dateOld));
            return;
        }
        loadData(start, end);
    }//GEN-LAST:event_jDateFromPropertyChange

    private void jDateToPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateToPropertyChange
        // TODO add your handling code here:
        java.util.Date date1 = jDateFrom.getDate();
        java.util.Date date2 = jDateTo.getDate();
        if (date1 == null || date2 == null || evt.getOldValue() == null || evt.getOldValue().toString().startsWith("javax.swing.JPanel")
                || evt.getOldValue().toString().startsWith("D3DGraphicsConfig")) {
            return;
        }
        DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("EEE MMM dd HH:mm:ss zzz yyyy", Locale.ENGLISH);
        LocalDate dateOld = LocalDate.parse(evt.getOldValue().toString(), inputFormatter);
        LocalDate start = date1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate end = date2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        if (start.isAfter(end)) {
            JOptionPane.showMessageDialog(null, "Ngày bắt đầu phải trước ngày kết thúc", "Lỗi", JOptionPane.ERROR_MESSAGE);
            jDateTo.setDate(Date.valueOf(dateOld));
            return;
        }
        loadData(start, end);
    }//GEN-LAST:event_jDateToPropertyChange

    private void btnXuatExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelActionPerformed
        // TODO add your handling code here:
        GenerateExcel excel = new GenerateExcel();
        java.util.Date date1 = jDateFrom.getDate();
        java.util.Date date2 = jDateTo.getDate();
        if (date1 == null) {
            date1 = new java.util.Date();
            jDateFrom.setDate(date1);
        }
        if (date2 == null) {
            date2 = new java.util.Date();
            jDateTo.setDate(date2);
        }

        LocalDate start = date1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate end = date2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        if (start.isAfter(end)) {
            JOptionPane.showMessageDialog(null, "Ngày bắt đầu phải trước ngày kết thúc", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        excel.generateExcel(start, end, billBUS.getBillByDate(start, end));
    }//GEN-LAST:event_btnXuatExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnXuatExcel;
    private com.toedter.calendar.JDateChooser jDateFrom;
    private com.toedter.calendar.JDateChooser jDateTo;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel ketQua;
    private javax.swing.JPanel pnRight;
    private javax.swing.JTable tableHoaDon;
    // End of variables declaration//GEN-END:variables
}
