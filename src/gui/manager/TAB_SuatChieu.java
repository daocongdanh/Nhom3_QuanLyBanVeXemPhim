/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.manager;

import gui.custom.CustomComboBoxUI;
import gui.custom.CustomScrollBarUI;
import gui.custom.CustomTabbedPaneUI;
import gui.custom.SpinnerUI;
import gui.custom.TableActionCellRender;
import gui.custom.TableActionCellEditor;
import gui.custom.TableActionEvent;
import bus.MovieBUS;
import bus.MovieTypeBUS;
import bus.RoomBUS;
import bus.ShowtimeBUS;
import connectDB.ConnectDB;
import entity.Movie;
import entity.MovieType;
import entity.Room;
import entity.Showtime;
import enums.MovieStatus;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.*;
import javax.swing.*;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;

/**
 *
 * @author Hoang
 */
public class TAB_SuatChieu extends javax.swing.JPanel {

    private MovieBUS movieBUS;
    private MovieTypeBUS movieTypeBUS;
    private RoomBUS roomBUS;
    private ShowtimeBUS showtimeBUS;

    /**
     * Creates new form TAB_SuatChieu
     */
    public TAB_SuatChieu() {
        movieBUS = new MovieBUS();
        movieTypeBUS = new MovieTypeBUS();
        roomBUS = new RoomBUS();
        showtimeBUS = new ShowtimeBUS();
        initComponents();

        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modalThemSuatChieu = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jDateSuatChieu = new com.toedter.calendar.JDateChooser();
        Date date = new Date();
        SpinnerDateModel sm = new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        jTimeSuatChieu = new javax.swing.JSpinner(sm);
        jLabel48 = new javax.swing.JLabel();
        jcbPhim = new javax.swing.JComboBox<>();
        jLabel50 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        btnLuu = new javax.swing.JButton();
        pnRight = new javax.swing.JPanel();
        txtTim = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        tabPane = new javax.swing.JTabbedPane();
        jDateTime = new com.toedter.calendar.JDateChooser();

        modalThemSuatChieu.setTitle("Thêm suất chiếu");
        modalThemSuatChieu.setBackground(new java.awt.Color(255, 255, 255));
        modalThemSuatChieu.setMinimumSize(new java.awt.Dimension(705, 374));
        modalThemSuatChieu.setModal(true);
        modalThemSuatChieu.setType(java.awt.Window.Type.POPUP);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(705, 374));

        jLabel46.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel46.setText("Tên phim");

        jLabel47.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel47.setText("Ngày chiếu");

        jDateSuatChieu.setBackground(new java.awt.Color(255, 255, 255));
        jDateSuatChieu.setDateFormatString("dd/MM/yyyy");
        jDateSuatChieu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jDateSuatChieu.setDate(java.sql.Date.valueOf(LocalDate.now()));

        JSpinner.DateEditor de = new JSpinner.DateEditor(jTimeSuatChieu, "HH:mm");
        jTimeSuatChieu.setEditor(de);
        jTimeSuatChieu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTimeSuatChieu.setUI(new SpinnerUI());
        jTimeSuatChieu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel48.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel48.setText("Suất chiếu");

        jcbPhim.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jcbPhim.setBorder(null);
        jcbPhim.setPreferredSize(new java.awt.Dimension(200, 50));

        jLabel50.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel50.setText("Giá vé");

        txtGia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtGia.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));
        txtGia.setMargin(new java.awt.Insets(2, 0, 2, 0));
        txtGia.setPreferredSize(new java.awt.Dimension(200, 50));
        txtGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaActionPerformed(evt);
            }
        });

        btnLuu.setBackground(new java.awt.Color(19, 87, 157));
        btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLuu.setForeground(new java.awt.Color(255, 255, 255));
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTimeSuatChieu, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel48))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel46)
                                    .addComponent(jcbPhim, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel47)
                                    .addComponent(jLabel50)
                                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jDateSuatChieu, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))))
                        .addGap(61, 61, 61))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbPhim, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateSuatChieu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(jLabel50))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTimeSuatChieu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jcbPhim.setUI(new CustomComboBoxUI());
        jcbPhim.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));

        javax.swing.GroupLayout modalThemSuatChieuLayout = new javax.swing.GroupLayout(modalThemSuatChieu.getContentPane());
        modalThemSuatChieu.getContentPane().setLayout(modalThemSuatChieuLayout);
        modalThemSuatChieuLayout.setHorizontalGroup(
            modalThemSuatChieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        modalThemSuatChieuLayout.setVerticalGroup(
            modalThemSuatChieuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnRight.setBackground(new java.awt.Color(255, 255, 255));

        txtTim.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtTim.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));
        txtTim.setMargin(new java.awt.Insets(2, 0, 2, 0));
        txtTim.setPreferredSize(new java.awt.Dimension(200, 50));
        txtTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimActionPerformed(evt);
            }
        });
        txtTim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKeyReleased(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(19, 87, 157));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-plus-27 (1).png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(null);
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N

        tabPane.setBackground(new java.awt.Color(255, 255, 255));
        tabPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabPane.setAlignmentX(1.0F);
        tabPane.setAlignmentY(1.0F);
        tabPane.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabPane.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        tabPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabPaneStateChanged(evt);
            }
        });

        jDateTime.setBackground(new java.awt.Color(255, 255, 255));
        jDateTime.setDateFormatString("dd/MM/yyyy");
        jDateTime.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jDateTime.setDate(java.sql.Date.valueOf(LocalDate.now()));
        jDateTime.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateTimePropertyChange(evt);
            }
        });

        javax.swing.GroupLayout pnRightLayout = new javax.swing.GroupLayout(pnRight);
        pnRight.setLayout(pnRightLayout);
        pnRightLayout.setHorizontalGroup(
            pnRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRightLayout.createSequentialGroup()
                .addGroup(pnRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnRightLayout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnRightLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1530, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        pnRightLayout.setVerticalGroup(
            pnRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnRightLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(pnRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3)
                    .addGroup(pnRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        tabPane.setUI(new CustomTabbedPaneUI());
        //bangSuatChieu.getTableHeader().setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1714, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(pnRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 6, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 966, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(pnRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadData() {
        java.util.List<Room> rooms = roomBUS.getRoomByStatus("Đang hoạt động");
        for (int i = 0; i < rooms.size(); i++) {
            Room room = rooms.get(i);
            JScrollPane jcpn = new JScrollPane();
            jcpn.getVerticalScrollBar().setUI(new CustomScrollBarUI());
            jcpn.getHorizontalScrollBar().setUI(new CustomScrollBarUI());
            tabPane.add(room.getName(), jcpn);
        }
    }

    private void loadTableShowtime(DefaultTableModel modelTable, LocalDate date, String keyword, Room room) {
        modelTable.setRowCount(0);
        List<Showtime> showtimes = showtimeBUS.getAllShowtimeByRoomAndTimeAndKeyword(room.getRoomId(), date, keyword);
        DecimalFormat fm = new DecimalFormat("#,### đ");
        for (Showtime st : showtimes) {
            Movie movie = movieBUS.getMovieById(st.getMovie().getMovieId());
            MovieType movieType = movieTypeBUS.getMovieTypeById(movie.getMovieType().getMovieTypeId());
            modelTable.addRow(new Object[]{st.getShowtimeId(), movie.getName(), movieType.getName(),
                fm.format(st.getTicketPrice()), DateTimeFormatter.ofPattern("HH:mm:ss").format(st.getStartTime())});
        }
    }

    private void txtTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimActionPerformed

    private void txtTimKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKeyReleased
        // TODO add your handling code here:
        String keyword = txtTim.getText();
        JScrollPane jScrollPane = (JScrollPane) tabPane.getSelectedComponent();
        JTable table = (JTable) jScrollPane.getViewport().getView();
        DefaultTableModel tableModel = (DefaultTableModel) table.getModel();
        LocalDate date = jDateTime.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        String roomName = tabPane.getTitleAt(tabPane.getSelectedIndex());
        Room room = roomBUS.getRoomByName(roomName);
        loadTableShowtime(tableModel, date, keyword, room);
    }//GEN-LAST:event_txtTimKeyReleased

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        modalThemSuatChieu.setLocationRelativeTo(null);
        List<Movie> movies = movieBUS.getMovieByKeywordAndMovieStatus("", MovieStatus.PLAYING);
        jcbPhim.removeAllItems();
        for (Movie movie : movies) {
            jcbPhim.addItem(movie.getName());
        }
        clearData();
        modalThemSuatChieu.setVisible(true);
    }//GEN-LAST:event_btnThemActionPerformed

    private void tabPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabPaneStateChanged
        // TODO add your handling code here:
        int selectedIndex = tabPane.getSelectedIndex();
        JScrollPane jScrollPane = (JScrollPane) tabPane.getSelectedComponent();
        JTable bangSuatChieu = new javax.swing.JTable();
        String[] header = {"Mã suất chiếu", "Tên phim", "Thể loại", "Giá vé", "Giờ chiếu"};
        DefaultTableModel modelTable = new DefaultTableModel(header, 0) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };

        bangSuatChieu.setModel(modelTable);
        bangSuatChieu.getTableHeader().setPreferredSize(new Dimension(bangSuatChieu.getColumnModel().getTotalColumnWidth(), 50));
        bangSuatChieu.getTableHeader().setDefaultRenderer(new javax.swing.table.DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                label.addMouseListener(null);

                return label;
            }
        });

        bangSuatChieu.setSelectionBackground(new java.awt.Color(54, 107, 177));
        bangSuatChieu.getTableHeader().setFont(new Font("Segoe UI", 0, 16));
        bangSuatChieu.getTableHeader().setReorderingAllowed(false);
        bangSuatChieu.setRowHeight(50);
        bangSuatChieu.getTableHeader().setFont(new Font("Segoe UI", 0, 16));
        bangSuatChieu.setFont(new java.awt.Font("Segoe UI", 0, 18));
        TableColumnModel columnModel = bangSuatChieu.getColumnModel();

        TableColumn tenphim = columnModel.getColumn(1);

        tenphim.setPreferredWidth(400);
        bangSuatChieu.getTableHeader().setResizingAllowed(false);
        for (int j = 0; j < bangSuatChieu.getColumnCount(); j++) {
            bangSuatChieu.getColumnModel().getColumn(j).setResizable(false);
        }

        bangSuatChieu.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onDelete(int row) {
            }

            @Override
            public void onEdit(int row) {

            }
        };
        jScrollPane.setViewportView(bangSuatChieu);
        // add data
        LocalDate date = jDateTime.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        String keyword = txtTim.getText();
        String roomName = tabPane.getTitleAt(selectedIndex);
        Room room = roomBUS.getRoomByName(roomName);
        loadTableShowtime(modelTable, date, keyword, room);
        jScrollPane.getViewport().setBackground(Color.WHITE);

    }//GEN-LAST:event_tabPaneStateChanged

    private void jDateTimePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateTimePropertyChange
        // TODO add your handling code here:
        String keyword = txtTim.getText();
        JScrollPane jScrollPane = (JScrollPane) tabPane.getSelectedComponent();
        if (jScrollPane != null) {
            JTable table = (JTable) jScrollPane.getViewport().getView();
            DefaultTableModel tableModel = (DefaultTableModel) table.getModel();
            LocalDate date = jDateTime.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            String roomName = tabPane.getTitleAt(tabPane.getSelectedIndex());
            Room room = roomBUS.getRoomByName(roomName);
            loadTableShowtime(tableModel, date, keyword, room);
        }
    }//GEN-LAST:event_jDateTimePropertyChange

    private void txtGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaActionPerformed
    
    private void clearData(){
        jcbPhim.setSelectedIndex(0);
        jDateSuatChieu.setDate(java.sql.Date.valueOf(LocalDate.now()));
        txtGia.setText("");
    }
    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        String movieName = (String) jcbPhim.getSelectedItem();
        LocalDate date = jDateSuatChieu.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalTime time = ((Date) jTimeSuatChieu.getValue())
                .toInstant().atZone(ZoneId.systemDefault()).toLocalTime();
        String giaText = txtGia.getText();
        double price = 0;
        if (giaText.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Giá vé không được rỗng", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            price = Double.parseDouble(giaText);
            if (price <= 0) {
                JOptionPane.showMessageDialog(null, "Giá vé phải > 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Giá vé phải là số", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        LocalDateTime startTime = LocalDateTime.of(date, time);
        Movie movie = movieBUS.getMovieByName(movieName);
        LocalDateTime endTime = startTime.plusMinutes(movie.getRunningTime());
        Room room = roomBUS.getRoomByName(tabPane.getTitleAt(tabPane.getSelectedIndex()));
        if (startTime.isBefore(LocalDateTime.now())) {
            JOptionPane.showMessageDialog(null, "Thời gian suất chiếu phải trước ngày hiện tại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (endTime.isAfter(LocalDateTime.of(date, LocalTime.of(23, 59)))) {
            JOptionPane.showMessageDialog(null, "Chỉ được tạo suất chiếu trong ngày", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!showtimeBUS.checkInsertShowtime(startTime, endTime, room)) {
            JOptionPane.showMessageDialog(null, "Trùng lịch chiếu", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Showtime showtime = new Showtime(null, price, startTime, room, movie);
        if (showtimeBUS.insertShowtime(showtime)) {
            JOptionPane.showMessageDialog(null, "Thêm mới thành công");
            JScrollPane jScrollPane = (JScrollPane) tabPane.getSelectedComponent();
            JTable table = (JTable) jScrollPane.getViewport().getView();
            String keyword = txtTim.getText();
            DefaultTableModel tableModel = (DefaultTableModel) table.getModel();
            LocalDate dateNow = jDateTime.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            loadTableShowtime(tableModel, dateNow, keyword, room);
            modalThemSuatChieu.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Thêm mới thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnLuuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnThem;
    private com.toedter.calendar.JDateChooser jDateSuatChieu;
    private com.toedter.calendar.JDateChooser jDateTime;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jTimeSuatChieu;
    private javax.swing.JComboBox<String> jcbPhim;
    private javax.swing.JDialog modalThemSuatChieu;
    private javax.swing.JPanel pnRight;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
}
